SQL CODE

-- Creating Fact Table
	CREATE TABLE fact_emissions (
		country VARCHAR(80),
		code VARCHAR(80),
		calling_code VARCHAR(80),
		year INT,
		co2emissions FLOAT,
		population2022 INT,
		area INT,
		area_percent_of_world VARCHAR(80),
		density VARCHAR(80)
	);

-- DROP calling_code
	ALTER TABLE fact_emissions
	DROP COLUMN calling_code;
	
	
-- Clean area_percent_of_world
	-- Step 1: Remove 'percent' and cast the value to FLOAT
	UPDATE fact_emissions
	SET area_percent_of_world = CAST(
		REPLACE(area_percent_of_world, 'percent','')
		AS FLOAT);
	
	-- Step 2: Convert column Data Type to FLOAT
	ALTER TABLE fact_emissions
	ALTER COLUMN area_percent_of_world TYPE FLOAT USING area_percent_of_world::FLOAT;
	
	
-- Clarify area column by changing name to area_km2
	ALTER TABLE fact_emissions
	RENAME COLUMN area TO area_km2;
	
	
	
-- Clean density and change name to population_by_km2_2022
	-- Step 1: Remove '/km2' and cast the value to FLOAT
	UPDATE fact_emissions
	SET density = CAST(
		REPLACE(
			REPLACE(density, ',','.'),
		'/km2', '') AS FLOAT);
		
	-- Step 2: Convert column Data Type to FLOAT
	ALTER TABLE fact_emissions
	ALTER COLUMN density TYPE FLOAT USING density::FLOAT;
	
	-- Step 3: Change column name
	ALTER TABLE fact_emissions
	RENAME COLUMN density TO population_by_km2_2022;


-- Create dimension table dim_country
CREATE TABLE dim_country (
	country_id SERIAL PRIMARY KEY,
	country_name VARCHAR(80),
	population2022 INT,
	area_km2 INT,
	area_percent_of_world FLOAT,
	population_by_km2_2022 FLOAT
);

-- Populate with distinct values from fact_emissions
INSERT INTO dim_country (
	country_name,
	population2022,
	area_km2,
	area_percent_of_world,
	population_by_km2_2022
	)
SELECT
	DISTINCT country,
	population2022,
	area_km2,
	area_percent_of_world,
	population_by_km2_2022
FROM fact_emissions;


-- Create country_id column in fact_emissions
ALTER TABLE fact_emissions
ADD COLUMN country_id INT;

-- Set it as a foreign key to reference dim_country
ALTER TABLE fact_emissions
ADD CONSTRAINT fk_country_id
FOREIGN KEY (country_id)
REFERENCES dim_country(country_id);


-- Fill out contry_id from dim_country to fact_emissions
UPDATE fact_emissions fe
SET country_id = dc.country_id
FROM dim_country dc
WHERE fe.country = dc.country_name;

-- DROP unnecessary columns
ALTER TABLE fact_emissions
DROP COLUMN 
	country,
	code,
	population2022,
	area_km2,
	area_percent_of_world,
	population_by_km2_2022
;

-- Null values in dim_country
	
	-- Update null values for column population2022 and area_km2
	UPDATE dim_country
	SET 
		population2022 = CASE country_id
			WHEN 43 THEN 102396968
			WHEN 110 THEN 7925
			WHEN 23 THEN 6825
			WHEN 85 THEN 1843
			WHEN 24 THEN 10693939
			WHEN 61 THEN 54672
			WHEN 68 THEN 1802250
			WHEN 167 THEN 6035103
			WHEN 190 THEN 28010186
			WHEN 135 THEN 0
			WHEN 206 THEN 1343873
			WHEN 143 THEN 43132
			WHEN 144 THEN 2093599
			WHEN 195 THEN 7488865
			WHEN 138 THEN 5250072
			WHEN 152 THEN 2105566
			WHEN 66 THEN 974052
			WHEN 1 THEN 593149
			WHEN 216 THEN 449002
			WHEN 90 THEN 271407
			WHEN 179 THEN 278786
			WHEN 8 THEN 155014
			WHEN 27 THEN 106766
			WHEN 168 THEN 63913
			WHEN 148 THEN 44542
			WHEN 139 THEN 15117
			WHEN 106 THEN 17565
			WHEN 219 THEN 11558
			WHEN 105 THEN 5997
			WHEN 29 THEN 4922
			WHEN 97 THEN 162
		END,
		area_km2 = CASE country_id
			WHEN 43 THEN 342000
			WHEN 110 THEN 122
			WHEN 23 THEN 32
			WHEN 85 THEN 135
			WHEN 24 THEN 78865
			WHEN 61 THEN 1393
			WHEN 68 THEN 10887
			WHEN 167 THEN 2344858
			WHEN 190 THEN 322463
			WHEN 135 THEN 14000000
			WHEN 206 THEN 14874
			WHEN 143 THEN 34
			WHEN 144 THEN 25713
			WHEN 195 THEN 1104
			WHEN 138 THEN 602
			WHEN 152 THEN 36125
			WHEN 66 THEN 2511
			WHEN 1 THEN 4033
			WHEN 216 THEN 5765
			WHEN 90 THEN 18575
			WHEN 179 THEN 4167
			WHEN 8 THEN 444
			WHEN 27 THEN 180
			WHEN 168 THEN 54
			WHEN 148 THEN 948
			WHEN 139 THEN 91
			WHEN 106 THEN 236
			WHEN 219 THEN 142
			WHEN 105 THEN 242
			WHEN 29 THEN 102
			WHEN 97 THEN 260
		END
	WHERE country_id IN (
		43, 110, 23, 85, 24, 61, 68, 167, 190, 135, 206, 143, 144, 195, 
		138, 152, 66, 1, 216, 90, 179, 8, 27, 168, 148, 139, 106, 219, 
		105, 29, 97
	);
	
	
	-- Update null values for column area_percent_of_world
	UPDATE dim_country
		SET area_percent_of_world = round((area_km2 / 510072000.0) * 100,1)
		WHERE country_id IN (
			23, 85, 68, 195, 138, 66, 167, 190, 135, 206, 143, 144, 1, 216, 8, 219
		);
		
		
	-- Update null values for column population_by_km2_2022
	UPDATE dim_country
		SET population_by_km2_2022 = ROUND(population2022 / area_km2, 1)
		WHERE country_id IN (
			43, 110, 24, 61, 152, 23, 85, 167, 190, 135, 206, 143, 90, 
			179, 8, 27, 168, 148, 139, 106, 219, 105, 29, 97
		);


-- Create temporary table continents_table
CREATE TABLE continents_table (
	country_name VARCHAR(80),
	continent VARCHAR(80)
);

-- Insert values from list
INSERT INTO continents_table (country_name, continent)
VALUES ('India',' Asia'),
	('China',' Asia'),
	('United States',' North America'),
	('Indonesia',' Asia'),
	('Pakistan',' Asia'),
	('Nigeria',' Africa'),
	('Brazil',' South America'),
	('Bangladesh',' Asia'),
	('Russia',' Asia, Europe'),
	('Ethiopia',' Africa'),
	('Mexico',' North America'),
	('Japan',' Asia'),
	('Egypt',' Africa'),
	('Philippines',' Asia'),
	('DR Congo',' Africa'),
	('Vietnam',' Asia'),
	('Iran',' Asia'),
	('Turkey',' Asia'),
	('Germany',' Europe'),
	('Thailand',' Asia'),
	('United Kingdom',' Europe'),
	('Tanzania',' Africa'),
	('France',' Europe'),
	('South Africa',' Africa'),
	('Italy',' Europe'),
	('Kenya',' Africa'),
	('Myanmar',' Asia'),
	('Colombia',' South America'),
	('South Korea',' Asia'),
	('Sudan',' Africa'),
	('Uganda',' Africa'),
	('Spain',' Europe'),
	('Algeria',' Africa'),
	('Iraq',' Asia'),
	('Argentina',' South America'),
	('Afghanistan',' Asia'),
	('Yemen',' Asia'),
	('Canada',' North America'),
	('Poland',' Europe'),
	('Morocco',' Africa'),
	('Angola',' Africa'),
	('Ukraine',' Europe'),
	('Uzbekistan',' Asia'),
	('Malaysia',' Asia'),
	('Mozambique',' Africa'),
	('Ghana',' Africa'),
	('Peru',' South America'),
	('Saudi Arabia',' Asia'),
	('Madagascar',' Africa'),
	('Ivory Coast',' Africa'),
	('Nepal',' Asia'),
	('Cameroon',' Africa'),
	('Venezuela',' South America'),
	('Niger',' Africa'),
	('Australia',' Oceania'),
	('North Korea',' Asia'),
	('Syria',' Asia'),
	('Mali',' Africa'),
	('Burkina Faso',' Africa'),
	('Taiwan',' Asia'),
	('Sri Lanka',' Asia'),
	('Malawi',' Africa'),
	('Zambia',' Africa'),
	('Kazakhstan',' Asia'),
	('Chad',' Africa'),
	('Chile',' South America'),
	('Romania',' Europe'),
	('Somalia',' Africa'),
	('Senegal',' Africa'),
	('Guatemala',' North America'),
	('Netherlands',' Europe'),
	('Ecuador',' South America'),
	('Cambodia',' Asia'),
	('Zimbabwe',' Africa'),
	('Guinea',' Africa'),
	('Benin',' Africa'),
	('Rwanda',' Africa'),
	('Burundi',' Africa'),
	('Bolivia',' South America'),
	('Tunisia',' Africa'),
	('South Sudan',' Africa'),
	('Haiti',' North America'),
	('Belgium',' Europe'),
	('Jordan',' Asia'),
	('Dominican Republic',' North America'),
	('United Arab Emirates',' Asia'),
	('Cuba',' North America'),
	('Honduras',' North America'),
	('Czech Republic',' Europe'),
	('Sweden',' Europe'),
	('Tajikistan',' Asia'),
	('Papua New Guinea',' Oceania'),
	('Portugal',' Europe'),
	('Azerbaijan',' Asia'),
	('Greece',' Europe'),
	('Hungary',' Europe'),
	('Togo',' Africa'),
	('Israel',' Asia'),
	('Austria',' Europe'),
	('Belarus',' Europe'),
	('Switzerland',' Europe'),
	('Sierra Leone',' Africa'),
	('Laos',' Asia'),
	('Turkmenistan',' Asia'),
	('Hong Kong',' Asia'),
	('Libya',' Africa'),
	('Kyrgyzstan',' Asia'),
	('Paraguay',' South America'),
	('Nicaragua',' North America'),
	('Bulgaria',' Europe'),
	('Serbia',' Europe'),
	('El Salvador',' North America'),
	('Republic of the Congo',' Africa'),
	('Denmark',' Europe'),
	('Singapore',' Asia'),
	('Lebanon',' Asia'),
	('Finland',' Europe'),
	('Liberia',' Africa'),
	('Norway',' Europe'),
	('Slovakia',' Europe'),
	('Palestine',' Asia'),
	('Central African Republic',' Africa'),
	('Oman',' Asia'),
	('Ireland',' Europe'),
	('New Zealand',' Oceania'),
	('Mauritania',' Africa'),
	('Costa Rica',' North America'),
	('Kuwait',' Asia'),
	('Panama',' North America'),
	('Croatia',' Europe'),
	('Georgia',' Asia'),
	('Eritrea',' Africa'),
	('Mongolia',' Asia'),
	('Uruguay',' South America'),
	('Puerto Rico',' North America'),
	('Bosnia and Herzegovina',' Europe'),
	('Qatar',' Asia'),
	('Moldova',' Europe'),
	('Namibia',' Africa'),
	('Armenia',' Asia'),
	('Lithuania',' Europe'),
	('Jamaica',' North America'),
	('Albania',' Europe'),
	('Gambia',' Africa'),
	('Gabon',' Africa'),
	('Botswana',' Africa'),
	('Lesotho',' Africa'),
	('Guinea-Bissau',' Africa'),
	('Slovenia',' Europe'),
	('Equatorial Guinea',' Africa'),
	('Latvia',' Europe'),
	('North Macedonia',' Europe'),
	('Bahrain',' Asia'),
	('Trinidad and Tobago',' North America'),
	('Timor-Leste',' Asia'),
	('Estonia',' Europe'),
	('Cyprus',' Europe'),
	('Mauritius',' Africa'),
	('Eswatini',' Africa'),
	('Djibouti',' Africa'),
	('Fiji',' Oceania'),
	('Reunion',' Africa'),
	('Comoros',' Africa'),
	('Guyana',' South America'),
	('Solomon Islands',' Oceania'),
	('Bhutan',' Asia'),
	('Macau',' Asia'),
	('Luxembourg',' Europe'),
	('Montenegro',' Europe'),
	('Suriname',' South America'),
	('Western Sahara',' Africa'),
	('Malta',' Europe'),
	('Maldives',' Asia'),
	('Cape Verde',' Africa'),
	('Brunei',' Asia'),
	('Belize',' North America'),
	('Bahamas',' North America'),
	('Iceland',' Europe'),
	('Guadeloupe',' North America'),
	('Martinique',' North America'),
	('Vanuatu',' Oceania'),
	('Mayotte',' Africa'),
	('French Guiana',' South America'),
	('New Caledonia',' Oceania'),
	('Barbados',' North America'),
	('French Polynesia',' Oceania'),
	('Sao Tome and Principe',' Africa'),
	('Samoa',' Oceania'),
	('Curacao',' North America'),
	('Saint Lucia',' North America'),
	('Guam',' Oceania'),
	('Kiribati',' Oceania'),
	('Seychelles',' Africa'),
	('Grenada',' North America'),
	('Micronesia',' Oceania'),
	('Aruba',' North America'),
	('Tonga',' Oceania'),
	('Jersey',' Europe'),
	('Saint Vincent and the Grenadines',' North America'),
	('Antigua and Barbuda',' North America'),
	('United States Virgin Islands',' North America'),
	('Isle of Man',' Europe'),
	('Andorra',' Europe'),
	('Cayman Islands',' North America'),
	('Dominica',' North America'),
	('Bermuda',' North America'),
	('Guernsey',' Europe'),
	('Greenland',' North America'),
	('Faroe Islands',' Europe'),
	('Saint Kitts and Nevis',' North America'),
	('American Samoa',' Oceania'),
	('Turks and Caicos Islands',' North America'),
	('Northern Mariana Islands',' Oceania'),
	('Sint Maarten',' North America'),
	('Liechtenstein',' Europe'),
	('British Virgin Islands',' North America'),
	('Gibraltar',' Europe'),
	('Monaco',' Europe'),
	('Marshall Islands',' Oceania'),
	('San Marino',' Europe'),
	('Saint Martin',' North America'),
	('Palau',' Oceania'),
	('Anguilla',' North America'),
	('Cook Islands',' Oceania'),
	('Nauru',' Oceania'),
	('Wallis and Futuna',' Oceania'),
	('Saint Barthelemy',' North America'),
	('Tuvalu',' Oceania'),
	('Saint Pierre and Miquelon',' North America'),
	('Montserrat',' North America'),
	('Falkland Islands',' South America'),
	('Tokelau',' Oceania'),
	('Niue',' Oceania'),
	('Vatican City',' Europe');


-- Create column continent_name in dim_country
ALTER TABLE dim_country
ADD COLUMN continent_name VARCHAR(80);

-- Populate with info from continents_table
UPDATE dim_country AS dc
SET continent_name = ct.continent
FROM continents_table AS ct
WHERE dc.country_name = ct.country_name;


-- Update dim_country with missing values for continent_name
	UPDATE dim_country
	SET continent_name = 'Africa'
	WHERE country_id IN (43, 110, 167, 190);

	UPDATE dim_country
	SET continent_name = 'Antarctica'
	WHERE country_id IN (135);

	UPDATE dim_country
	SET continent_name = 'Asia'
	WHERE country_id IN (23, 85, 206);

	UPDATE dim_country
	SET continent_name = 'Europe'
	WHERE country_id IN (24, 61, 68);

	UPDATE dim_country
	SET continent_name = 'North America'
	WHERE country_id IN (143);


-- Drop table continents_table
DROP TABLE continents_table;



